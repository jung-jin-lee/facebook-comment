{"version":3,"sources":["redux/modules/comments.js","redux/modules/index.js","redux/configure-store.js","components/comment/CommentInput.jsx","containers/comment/CommentInputContainer.js","components/comment/CommentSection.jsx","components/comment/CommentDeleteButton.jsx","components/comment/CommentActionList.jsx","components/comment/Reply.jsx","components/comment/ReplyInput.jsx","containers/comment/ReplyInputContainer.js","components/comment/Comment.jsx","components/comment/CommentList.jsx","containers/comment/CommentListContainer.js","App.js","index.js"],"names":["INITIAL_STATE","persistConfig","key","storage","persistReducer","state","action","payload","id","userId","commentId","replyId","content","type","likes","replies","newLikes","filter","newComments","k","rootPersistConfig","rootReducer","combineReducers","comments","commentsReducer","persistedReducer","CommentInput","addComment","useState","value","setValue","className","onChange","e","target","onKeyUp","placeholder","connect","dispatch","uuidv4","CommentSection","doesILike","likeCount","style","right","bottom","CommentDeleteButton","deleteComment","visible","onClick","window","confirm","onClickDeleteButton","CommentActionList","cancelLikeToComment","likeToComment","onClickReplyButton","likeOrCancelLikeAction","onClickLikeButton","Reply","ReplyInput","addReplyToComment","Comment","visibleCommentDeleteButton","setVisibleCommentDeleteButton","length","visibleReplyInput","setVisibleReplyInput","includes","setDoesILike","useEffect","onMouseOut","onMouseOver","map","ReplyInputContainer","CommentList","convertedComments","Object","entries","constructor","push","comment","App","CommentListContainer","CommentInputContainer","store","createStore","persistor","persistStore","configureStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.39a08d5d.chunk.js","sourcesContent":["import uuidv4 from \"uuid/v4\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistReducer } from \"redux-persist\";\n\n// Action Types\nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const ADD_REPLY_TO_COMMENT = \"ADD_REPLY_TO_COMMENT\";\nexport const CANCEL_LIKE_TO_COMMENT = \"CANCEL_LIKE_TO_COMMENT\";\nexport const DELETE_COMMENT = \"DELETE_COMMENT\";\nexport const LIKE_TO_COMMENT = \"LIKE_TO_COMMENT\";\n\n// Actions\nexport const addComment = content => ({\n    type: ADD_COMMENT,\n    payload: {\n        id: uuidv4(),\n        content,\n    },\n});\n\nexport const likeToComment = (id, userId) => ({\n    type: LIKE_TO_COMMENT,\n    payload: {\n        id,\n        userId,\n    },\n});\n\nexport const cancelLikeToComment = (id, userId) => ({\n    type: CANCEL_LIKE_TO_COMMENT,\n    payload: {\n        id,\n        userId,\n    }\n})\n\nexport const deleteComment = id => ({\n    type: DELETE_COMMENT,\n    payload: {\n        id,\n    }\n});\n\nexport const addReplyToComment = (commentId, content) => ({\n    type: ADD_REPLY_TO_COMMENT,\n    payload: {\n        commentId,\n        replyId: uuidv4(),\n        content,\n    },\n});\n\n// Reducer\nconst INITIAL_STATE = {};\n\nconst commentsReducer = (state = INITIAL_STATE, action) => {\n    const { id, userId, commentId, replyId, content } = action.payload || {};\n    switch (action.type) {\n        case ADD_COMMENT:\n            return {\n                ...state,\n                [id]: { \n                    content: content, \n                    likes: [], \n                    replies: [],\n                },\n            };\n        case ADD_REPLY_TO_COMMENT:\n            return {\n                ...state,\n                [commentId]: { \n                    ...state[commentId], \n                    replies: [\n                        ...state[commentId].replies, \n                        { \n                            id: replyId, \n                            content: content, \n                            likes: [],\n                        },\n                    ], \n                },\n            };\n        case CANCEL_LIKE_TO_COMMENT:\n            const newLikes = [...state[id].likes].filter(id => id !== userId);\n            return {\n                ...state,\n                [id]: { \n                    ...state[id],\n                    likes: [...newLikes],\n                },\n            };\n        case DELETE_COMMENT:\n            let newComments = {};\n            for (let k in state) {\n                if (k !== action.payload.id) {\n                    newComments[k] = state[k];\n                }\n            }\n            return {\n                ...newComments,\n            };\n        case LIKE_TO_COMMENT:\n            return {\n                ...state,\n                [id]: { \n                    ...state[id],\n                    likes: [\n                        ...state[id].likes, \n                        userId\n                    ],\n                },\n            };\n        default:\n            return state;\n    }\n};\n\nconst persistConfig = {\n    key: \"comments\",\n    storage,\n};\n\nexport default persistReducer(persistConfig, commentsReducer);\n","import { combineReducers } from \"redux\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistReducer } from \"redux-persist\";\nimport commentsReducer from \"./comments\";\n\nconst rootPersistConfig = {\n    key: \"root\",\n    storage,\n};\n\nconst rootReducer = combineReducers({\n    comments: commentsReducer,\n});\n\nexport default persistReducer(rootPersistConfig, rootReducer);\n","import { createStore } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport rootReducer from \"./modules\";\n\nconst persistConfig = {\n    key: \"root\",\n    storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n    let store = createStore(persistedReducer);\n    let persistor = persistStore(store);\n\n    return { store, persistor };\n};\n","import React, { useState } from \"react\";\n\nfunction CommentInput({ addComment })  {\n    const [value, setValue] = useState(\"\");\n\n    const onChange = e => setValue(e.target.value);\n    const onKeyUp = (e, addComment) => {\n        if (e.key === \"Enter\") {\n            addComment(e.target.value);\n            setValue(\"\");\n        }\n    };\n\n    return (\n        <div className=\"pl-1 pr-4 w-full\">\n            <input \n                className=\"border border-gray-400 bg-gray-200 p-2 rounded-full w-full\" \n                onChange={onChange}\n                onKeyUp={e => onKeyUp(e, addComment)}\n                placeholder=\"댓글을 입력하세요...\"\n                value={value}\n            />\n        </div>\n    );\n};\n\nexport default CommentInput;\n","import { connect } from \"react-redux\";\nimport CommentInput from \"../../components/comment/CommentInput.jsx\";\nimport { addComment } from \"../../redux/modules/comments\";\n\nexport default connect(\n    null,\n    dispatch => ({ addComment: content => dispatch(addComment(content)) }),\n)(CommentInput);\n","import React from \"react\";\n\nfunction CommentSection({ content, doesILike, likeCount }) {\n    return (\n        <div className=\"bg-gray-200 rounded-full break-words relative inline-block max-w-full w-3/4 px-6 py-2\">\n            <div>\n                <div className=\"inline-block text-sm text-blue-800 font-semibold\">홍길동</div>\n                <span className=\"ml-1 text-sm\">{content}</span>\n            </div>\n            <div\n                className={\"bg-white border border-gray-400 shadow-md rounded-full px-1 absolute z-10 \" + (doesILike ? \"\" : \"hidden\")}\n                style={{right: \"2px\", bottom: \"-8px\"}}\n            >\n                <span className=\"bg-blue-500 px-1 rounded-full\">\n                    <i className=\"material-icons text-xs text-white\">\n                        thumb_up\n                    </i>\n                </span>\n                <span className=\"ml-1 text-sm\">{likeCount}</span>\n            </div>\n        </div>\n    );\n}\n\nexport default CommentSection;\n","import React from \"react\";\n\nfunction CommentDeleteButton({ deleteComment, id, visible }) {\n    const onClickDeleteButton = id => {\n        if (window.confirm(\"이 댓글을 삭제하시겠어요?\")) {\n            deleteComment(id);\n        }\n    };\n    \n    return (\n        <div className={\"ml-2 cursor-pointer inline-block leading-none \" + (visible ? \"\" : \"hidden\")}>\n            <div className=\"inline-block border border-gray-400 p-1 rounded-full shadow-md\">\n                <ul>\n                    <li onClick={() => onClickDeleteButton(id)}>\n                        <i className=\"material-icons text-base text-gray-600\">\n                            delete\n                        </i>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default CommentDeleteButton;\n","import React from \"react\";\n\nfunction CommentActionList({ cancelLikeToComment, doesILike = false, id, likeToComment, onClickReplyButton }) {\n    const onClickLikeButton = (id, userId, likeOrCancelLikeAction) => {\n        likeOrCancelLikeAction(id, userId);\n    };\n    \n    return (\n        <ul className=\"inline-block text-xs\">\n            <li\n                className={\"inline-block cursor-pointer text-blue-800 \" + (doesILike ? \"font-semibold\" : \"\")} \n                onClick={() => onClickLikeButton(id, \"peter\", doesILike ? cancelLikeToComment : likeToComment)}\n            >\n                <span>좋아요</span>\n            </li>\n            <li className=\"inline-block text-blue-800\">\n                <span>·</span>\n            </li>\n            <li className=\"inline-block cursor-pointer text-blue-800\" onClick={onClickReplyButton}>\n                <span>답글 달기</span>\n            </li>\n        </ul>\n    );\n}\n\nexport default CommentActionList;\n","import React from \"react\";\n\nfunction Reply({ id, content }) {\n    return (\n        <li className=\"mt-2\" key={id}>\n            <div className=\"bg-gray-200 rounded-full break-words relative inline-block max-w-full w-3/4 leading-snug px-6 py-2\">\n                <div className=\"inline-block text-sm text-blue-800 font-semibold\">홍길동</div>\n                <span className=\"ml-1 text-sm\">{content}</span>\n            </div> \n        </li>\n    );\n}\n\nexport default Reply;\n","import React, { useState } from \"react\";\n\nfunction ReplyInput({ commentId, addReplyToComment, visible }) {\n    const [value, setValue] = useState(\"\");\n\n    const onChange = e => setValue(e.target.value);\n    const onKeyUp = (e, commentId, addReplyToComment) => {\n        if (e.key === \"Enter\") {\n            addReplyToComment(commentId, e.target.value);\n            setValue(\"\");\n        }\n    };\n\n    return (\n        <div className={\"pl-8 pt-2 pr-4 mb-4 w-full \" + (visible ? \"\" : \"hidden\")}>\n            <input \n                className=\"border border-gray-400 bg-gray-200 p-2 rounded-full w-full\" \n                onChange={onChange}\n                onKeyUp={e => onKeyUp(e, commentId, addReplyToComment)}\n                placeholder=\"답글을 입력하세요...\"\n                value={value}\n            />\n        </div>\n    );\n};\n\nexport default ReplyInput;\n","import { connect } from \"react-redux\";\nimport ReplyInput from \"../../components/comment/ReplyInput.jsx\";\nimport { addReplyToComment } from \"../../redux/modules/comments\";\n\nexport default connect(\n    null,\n    dispatch => ({ addReplyToComment: (commentId, content) => dispatch(addReplyToComment(commentId, content)) }),\n)(ReplyInput);\n","import React, { useEffect, useState } from \"react\";\nimport CommentSection from \"./CommentSection.jsx\";\nimport CommentDeleteButton from \"./CommentDeleteButton.jsx\";\nimport CommentActionList from \"./CommentActionList.jsx\";\nimport Reply from \"./Reply.jsx\";\nimport ReplyInputContainer from \"../../containers/comment/ReplyInputContainer.js\";\n\nfunction Comment({\n    cancelLikeToComment,\n    content,\n    deleteComment,\n    id,\n    likes, \n    likeCount = 0, \n    likeToComment, \n    replies = [],\n}) {\n    const [visibleCommentDeleteButton, setVisibleCommentDeleteButton] = useState(false);\n    const [visibleReplyInput, setVisibleReplyInput] = useState(replies.length > 0 ? true : false);\n    const [doesILike, setDoesILike] = useState(likes.includes(\"peter\"));\n\n    const onClickReplyButton = () => setVisibleReplyInput(true);\n    const onMouseOverCommentSection = e => setVisibleCommentDeleteButton(true);\n    const onMouseOutCommentSection = () => setVisibleCommentDeleteButton(false);\n\n    useEffect(() => {\n        setDoesILike(likes.includes(\"peter\"));\n    }, [likes])\n\n    return (\n        <li>\n            <div onMouseOut={onMouseOutCommentSection} onMouseOver={onMouseOverCommentSection}>\n                <CommentSection content={content} doesILike={doesILike} likeCount={likeCount} />\n                <CommentDeleteButton deleteComment={deleteComment} id={id} visible={visibleCommentDeleteButton} />\n            </div>\n            <div className=\"ml-6\">\n                <CommentActionList\n                    cancelLikeToComment={cancelLikeToComment}\n                    doesILike={doesILike}\n                    id={id}\n                    likeToComment={likeToComment}\n                    onClickReplyButton={onClickReplyButton} \n                />\n            </div>\n            <div>\n                <ul className=\"mt-2 ml-8\">\n                    {replies && replies.map(({ id, content }) => (\n                        <Reply content={content} id={id} key={id} />\n                    ))}\n                </ul>\n                <ReplyInputContainer commentId={id} visible={visibleReplyInput} />\n            </div>\n        </li>\n    );\n}\n\nexport default Comment;\n","import React from \"react\";\nimport Comment from \"./Comment.jsx\";\n\nconst CommentList = ({ cancelLikeToComment, comments = {}, deleteComment, likeToComment }) => {\n    let convertedComments = [];\n    if (Object.entries(comments).length !== 0 || comments.constructor !== Object) {\n        for (const key in comments) {\n            if (key === \"_persist\") {\n                continue;\n            }\n            convertedComments.push({\n                ...comments[key],\n                id: key,\n                likeCount: comments[key].likes.length,\n                replies: comments[key].replies && comments[key].replies.map(({ id, content }) => ({ \n                    id,\n                    content,\n                })),\n            });\n        }\n    }\n    \n    return (\n        <ul>\n            {convertedComments && convertedComments.map(comment => (\n                <Comment\n                    cancelLikeToComment={cancelLikeToComment}\n                    deleteComment={deleteComment}\n                    key={comment.id}\n                    likeToComment={likeToComment}\n                    {...comment}\n                />\n            ))}\n        </ul>\n    );\n};\n\nexport default CommentList;\n","import { connect } from \"react-redux\";\nimport CommentList from \"../../components/comment/CommentList\";\nimport { cancelLikeToComment, deleteComment, likeToComment } from \"../../redux/modules/comments\";\n\nconst mapStateToProps = ({ comments }) => ({ comments });\n\nconst mapDispatchToProps = dispatch => ({\n    cancelLikeToComment: (id, userId) => dispatch(cancelLikeToComment(id, userId)),\n    deleteComment: id => dispatch(deleteComment(id)),\n    likeToComment: (id, userId) => dispatch(likeToComment(id, userId)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(CommentList);\n","import React from \"react\";\nimport CommentInputContainer from \"./containers/comment/CommentInputContainer.js\";\nimport CommentListContainer from \"./containers/comment/CommentListContainer.js\";\n\nfunction App() {\n  return (\n    <div className=\"mx-auto\">\n      <div className=\"bg-white mx-auto mt-2 p-4 border border-gray-400\" style={{\"width\": \"600px\"}}>\n        <CommentListContainer />\n        <CommentInputContainer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport configureStore from \"./redux/configure-store\";\nimport App from \"./App\";\n\nimport \"./tailwind.css\";\n\nconst { store, persistor } = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <App />\n        </PersistGate>\n    </Provider>, \n    document.getElementById('root')\n);\n"],"sourceRoot":""}